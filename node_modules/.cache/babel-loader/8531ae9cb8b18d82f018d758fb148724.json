{"ast":null,"code":"import{API_BASE_URL}from\"../app-config\";var ACCESS_TOKEN=\"ACCESS_TOKEN\";export function call(api,method,request){var headers=new Headers({\"Content-Type\":\"application/json\"});// 로컬 스토리지에서 ACCESS TOKEN 가져오기\nvar accessToken=localStorage.getItem(\"ACCESS_TOKEN\");if(accessToken&&accessToken!==null){headers.append(\"Authorization\",\"Bearer \"+accessToken);}var options={headers:headers,url:API_BASE_URL+api,method:method};if(request){// GET method\noptions.body=JSON.stringify(request);}return fetch(options.url,options).then(function(response){return response.json().then(function(json){if(!response.ok){// response.ok가 true이면 정상적인 리스폰스를 받은것, 아니면 에러 리스폰스를 받은것.\nreturn Promise.reject(json);}return json;});}).catch(function(error){// 추가된 부분\nconsole.log(error.status);if(error.status===403){window.location.href=\"/login\";// redirect\n}return Promise.reject(error);});}export function signin(userDTO){return call(\"/auth/signin\",\"POST\",userDTO).then(function(response){if(response.token){// 로컬 스토리지에 토큰 저장\nlocalStorage.setItem(ACCESS_TOKEN,response.token);// token이 존재하는 경우 Todo 화면으로 리디렉트\nwindow.location.href=\"/\";}});}export function signout(){localStorage.setItem(ACCESS_TOKEN,null);window.location.href=\"/login\";}export function signup(userDTO){return call(\"/auth/signup\",\"POST\",userDTO);}","map":{"version":3,"names":["API_BASE_URL","ACCESS_TOKEN","call","api","method","request","headers","Headers","accessToken","localStorage","getItem","append","options","url","body","JSON","stringify","fetch","then","response","json","ok","Promise","reject","catch","error","console","log","status","window","location","href","signin","userDTO","token","setItem","signout","signup"],"sources":["D:/demo/todo-react-app/src/service/ApiService.js"],"sourcesContent":["import { API_BASE_URL } from \"../app-config\";\nconst ACCESS_TOKEN = \"ACCESS_TOKEN\";\n\nexport function call(api, method, request) {\n  let headers = new Headers({\n    \"Content-Type\": \"application/json\",\n  });\n\n  // 로컬 스토리지에서 ACCESS TOKEN 가져오기\n  const accessToken = localStorage.getItem(\"ACCESS_TOKEN\");\n  if (accessToken && accessToken !== null) {\n    headers.append(\"Authorization\", \"Bearer \" + accessToken);\n  }\n\n  let options = {\n    headers: headers,\n    url: API_BASE_URL + api,\n    method: method,\n  };\n\n  if (request) {\n    // GET method\n    options.body = JSON.stringify(request);\n  }\n  return fetch(options.url, options)\n    .then((response) =>\n      response.json().then((json) => {\n        if (!response.ok) {\n          // response.ok가 true이면 정상적인 리스폰스를 받은것, 아니면 에러 리스폰스를 받은것.\n          return Promise.reject(json);\n        }\n        return json;\n      })\n    )\n    .catch((error) => {\n      // 추가된 부분\n      console.log(error.status);\n      if (error.status === 403) {\n        window.location.href = \"/login\"; // redirect\n      }\n      return Promise.reject(error);\n    });\n}\n\nexport function signin(userDTO) {\n  return call(\"/auth/signin\", \"POST\", userDTO).then((response) => {\n    if (response.token) {\n      // 로컬 스토리지에 토큰 저장\n      localStorage.setItem(ACCESS_TOKEN, response.token);\n      // token이 존재하는 경우 Todo 화면으로 리디렉트\n      window.location.href = \"/\";\n    }\n  });\n}\n\nexport function signout() {\n  localStorage.setItem(ACCESS_TOKEN, null);\n  window.location.href = \"/login\";\n}\n\nexport function signup(userDTO) {\n  return call(\"/auth/signup\", \"POST\", userDTO);\n}"],"mappings":"AAAA,OAASA,YAAT,KAA6B,eAA7B,CACA,GAAMC,aAAY,CAAG,cAArB,CAEA,MAAO,SAASC,KAAT,CAAcC,GAAd,CAAmBC,MAAnB,CAA2BC,OAA3B,CAAoC,CACzC,GAAIC,QAAO,CAAG,GAAIC,QAAJ,CAAY,CACxB,eAAgB,kBADQ,CAAZ,CAAd,CAIA;AACA,GAAMC,YAAW,CAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAApB,CACA,GAAIF,WAAW,EAAIA,WAAW,GAAK,IAAnC,CAAyC,CACvCF,OAAO,CAACK,MAAR,CAAe,eAAf,CAAgC,UAAYH,WAA5C,EACD,CAED,GAAII,QAAO,CAAG,CACZN,OAAO,CAAEA,OADG,CAEZO,GAAG,CAAEb,YAAY,CAAGG,GAFR,CAGZC,MAAM,CAAEA,MAHI,CAAd,CAMA,GAAIC,OAAJ,CAAa,CACX;AACAO,OAAO,CAACE,IAAR,CAAeC,IAAI,CAACC,SAAL,CAAeX,OAAf,CAAf,CACD,CACD,MAAOY,MAAK,CAACL,OAAO,CAACC,GAAT,CAAcD,OAAd,CAAL,CACJM,IADI,CACC,SAACC,QAAD,QACJA,SAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqB,SAACE,IAAD,CAAU,CAC7B,GAAI,CAACD,QAAQ,CAACE,EAAd,CAAkB,CAChB;AACA,MAAOC,QAAO,CAACC,MAAR,CAAeH,IAAf,CAAP,CACD,CACD,MAAOA,KAAP,CACD,CAND,CADI,EADD,EAUJI,KAVI,CAUE,SAACC,KAAD,CAAW,CAChB;AACAC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAlB,EACA,GAAIH,KAAK,CAACG,MAAN,GAAiB,GAArB,CAA0B,CACxBC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAuB,QAAvB,CAAiC;AAClC,CACD,MAAOT,QAAO,CAACC,MAAR,CAAeE,KAAf,CAAP,CACD,CAjBI,CAAP,CAkBD,CAED,MAAO,SAASO,OAAT,CAAgBC,OAAhB,CAAyB,CAC9B,MAAO/B,KAAI,CAAC,cAAD,CAAiB,MAAjB,CAAyB+B,OAAzB,CAAJ,CAAsCf,IAAtC,CAA2C,SAACC,QAAD,CAAc,CAC9D,GAAIA,QAAQ,CAACe,KAAb,CAAoB,CAClB;AACAzB,YAAY,CAAC0B,OAAb,CAAqBlC,YAArB,CAAmCkB,QAAQ,CAACe,KAA5C,EACA;AACAL,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAuB,GAAvB,CACD,CACF,CAPM,CAAP,CAQD,CAED,MAAO,SAASK,QAAT,EAAmB,CACxB3B,YAAY,CAAC0B,OAAb,CAAqBlC,YAArB,CAAmC,IAAnC,EACA4B,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAuB,QAAvB,CACD,CAED,MAAO,SAASM,OAAT,CAAgBJ,OAAhB,CAAyB,CAC9B,MAAO/B,KAAI,CAAC,cAAD,CAAiB,MAAjB,CAAyB+B,OAAzB,CAAX,CACD"},"metadata":{},"sourceType":"module"}