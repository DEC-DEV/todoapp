{"ast":null,"code":"import _classCallCheck from\"D:/todo-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"D:/todo-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"D:/todo-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"D:/todo-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React from\"react\";import Todo from\"./Todo\";import AddTodo from\"./AddTodo.js\";import{Paper,List,Container,Grid,Button,AppBar,Toolbar,Typography}from\"@material-ui/core\";import\"./App.css\";import{call,signout}from\"./service/ApiService\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);_this.add=function(item){call(\"/todo\",\"POST\",item).then(function(response){return _this.setState({items:response.data});});};_this.delete=function(item){call(\"/todo\",\"DELETE\",item).then(function(response){return _this.setState({items:response.data});});};_this.update=function(item){call(\"/todo\",\"PUT\",item).then(function(response){return _this.setState({items:response.data});});};_this.state={items:[],/* (1) 로딩 중이라는 상태를 표현할 변수 생성자에 상태 변수를 추가 */loading:true};return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;/* componentDidMount에서 Todo 리스트를 가져오는 GET 요청이 성공적으로\n    리턴하는 경우 loading을 false로 고친다. 더 이상 로딩이 아니라는 뜻.*/call(\"/todo\",\"GET\",null).then(function(response){return _this2.setState({items:response.data,loading:false});});}},{key:\"render\",value:function render(){var _this3=this;var todoItems=this.state.items.length>0&&/*#__PURE__*/_jsx(Paper,{style:{margin:16},children:/*#__PURE__*/_jsx(List,{children:this.state.items.map(function(item,idx){return/*#__PURE__*/_jsx(Todo,{item:item,delete:_this3.delete,update:_this3.update},item.id);})})});// navigationBar 추가\nvar navigationBar=/*#__PURE__*/_jsx(AppBar,{position:\"static\",children:/*#__PURE__*/_jsx(Toolbar,{children:/*#__PURE__*/_jsxs(Grid,{justify:\"space-between\",container:true,children:[/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"\\uC624\\uB298\\uC758 \\uD560\\uC77C\"})}),/*#__PURE__*/_jsx(Grid,{children:/*#__PURE__*/_jsx(Button,{color:\"inherit\",onClick:signout,children:\"\\uB85C\\uADF8\\uC544\\uC6C3\"})})]})})});/* 로딩 중이 아닐 때 렌더링 할 부분 */var todoListPage=/*#__PURE__*/_jsxs(\"div\",{children:[navigationBar,\" \",/*#__PURE__*/_jsxs(Container,{maxWidth:\"md\",children:[/*#__PURE__*/_jsx(AddTodo,{add:this.add}),/*#__PURE__*/_jsx(\"div\",{className:\"TodoList\",children:todoItems})]})]});/* 로딩 중일 때 렌더링할 부분 */var loadingPage=/*#__PURE__*/_jsx(\"h1\",{children:\" \\uB85C\\uB529 \\uC911..\"});var content=loadingPage;if(!this.state.loading){/*로딩중이 아니라면 todoListPage를 선택 */content=todoListPage;}/* 선택한 content 렌더링 */return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:content});// 3. props로 넘겨주기\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[navigationBar,\" \",/*#__PURE__*/_jsxs(Container,{maxWidth:\"md\",children:[/*#__PURE__*/_jsx(AddTodo,{add:this.add}),/*#__PURE__*/_jsx(\"div\",{className:\"TodoList\",children:todoItems})]})]});}}]);return App;}(React.Component);export default App;","map":{"version":3,"names":["React","Todo","AddTodo","Paper","List","Container","Grid","Button","AppBar","Toolbar","Typography","call","signout","App","props","add","item","then","response","setState","items","data","delete","update","state","loading","todoItems","length","margin","map","idx","id","navigationBar","todoListPage","loadingPage","content","Component"],"sources":["D:/todo-react-app/src/App.js"],"sourcesContent":["import React from \"react\";\nimport Todo from \"./Todo\";\nimport AddTodo from \"./AddTodo.js\";\nimport { Paper, List, Container, Grid, Button, AppBar, Toolbar, Typography } from \"@material-ui/core\";\nimport \"./App.css\";\nimport { call, signout } from \"./service/ApiService\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      /* (1) 로딩 중이라는 상태를 표현할 변수 생성자에 상태 변수를 추가 */\n      loading : true,\n    };\n  }\n\n  componentDidMount() {\n    /* componentDidMount에서 Todo 리스트를 가져오는 GET 요청이 성공적으로\n    리턴하는 경우 loading을 false로 고친다. 더 이상 로딩이 아니라는 뜻.*/\n    call(\"/todo\", \"GET\", null).then((response) =>\n      this.setState({ items: response.data, loading: false })\n    );\n  }\n\n  add = (item) => {\n    call(\"/todo\", \"POST\", item).then((response) =>\n      this.setState({ items: response.data })\n    );\n  };\n\n  delete = (item) => {\n    call(\"/todo\", \"DELETE\", item).then((response) =>\n      this.setState({ items: response.data })\n    );\n  };\n\n  update = (item) => {\n    call(\"/todo\", \"PUT\", item).then((response) =>\n      this.setState({ items: response.data })\n    );\n  };\n\n  render() {\n    var todoItems = this.state.items.length > 0 && (\n      <Paper style={{ margin: 16 }}>\n        <List>\n          {this.state.items.map((item, idx) => (\n            <Todo\n              item={item}\n              key={item.id}\n              delete={this.delete}\n              update={this.update}\n            />\n          ))}\n        </List>\n      </Paper>\n    );\n\n    // navigationBar 추가\n    var navigationBar = (\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Grid justify=\"space-between\" container>\n            <Grid item>\n              <Typography variant=\"h6\">오늘의 할일</Typography>\n            </Grid>\n            <Grid>\n              <Button color=\"inherit\" onClick={signout}>\n                로그아웃\n              </Button>\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n    )\n\n    /* 로딩 중이 아닐 때 렌더링 할 부분 */\n    var todoListPage = (\n      <div>\n        {navigationBar} {/* 네비게이션 바 렌더링 */}\n        <Container maxWidth=\"md\">\n          <AddTodo add={this.add} />\n          <div className=\"TodoList\">{todoItems}</div>\n        </Container>\n      </div>\n    )\n\n    /* 로딩 중일 때 렌더링할 부분 */\n    var loadingPage = <h1> 로딩 중..</h1>;\n    var content = loadingPage;\n    if (!this.state.loading) {\n      /*로딩중이 아니라면 todoListPage를 선택 */\n      content = todoListPage;\n    }\n\n    /* 선택한 content 렌더링 */\n    return <div className=\"App\">{content}</div>\n\n\n    // 3. props로 넘겨주기\n    return (\n      <div className=\"App\">\n        {navigationBar} {/* 네비게이션 바 렌더링 */}\n        <Container maxWidth=\"md\">\n          <AddTodo add={this.add} />\n          <div className=\"TodoList\">{todoItems}</div>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}