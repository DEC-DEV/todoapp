[{"D:\\demo-front\\src\\index.js":"1","D:\\demo-front\\src\\AppRouter.js":"2","D:\\demo-front\\src\\reportWebVitals.js":"3","D:\\demo-front\\src\\App.js":"4","D:\\demo-front\\src\\SignUp.js":"5","D:\\demo-front\\src\\Login.js":"6","D:\\demo-front\\src\\AddTodo.js":"7","D:\\demo-front\\src\\Todo.js":"8","D:\\demo-front\\src\\service\\ApiService.js":"9","D:\\demo-front\\src\\app-config.js":"10"},{"size":517,"mtime":1641691826000,"results":"11","hashOfConfig":"12"},{"size":1093,"mtime":1664349274032,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1641691826000,"results":"14","hashOfConfig":"12"},{"size":3093,"mtime":1664346662974,"results":"15","hashOfConfig":"12"},{"size":2932,"mtime":1664348972651,"results":"16","hashOfConfig":"12"},{"size":2309,"mtime":1664354183986,"results":"17","hashOfConfig":"12"},{"size":1392,"mtime":1641691826000,"results":"18","hashOfConfig":"12"},{"size":2106,"mtime":1641691826000,"results":"19","hashOfConfig":"12"},{"size":1717,"mtime":1664347573740,"results":"20","hashOfConfig":"12"},{"size":286,"mtime":1665562242336,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"f9qh1o",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\demo-front\\src\\index.js",[],[],"D:\\demo-front\\src\\AppRouter.js",[],[],"D:\\demo-front\\src\\reportWebVitals.js",[],[],"D:\\demo-front\\src\\App.js",["53"],[],"import React from \"react\";\nimport Todo from \"./Todo\";\nimport AddTodo from \"./AddTodo.js\";\nimport { Paper, List, Container, Grid, Button, AppBar, Toolbar, Typography } from \"@material-ui/core\";\nimport \"./App.css\";\nimport { call, signout } from \"./service/ApiService\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      /* (1) 로딩 중이라는 상태를 표현할 변수 생성자에 상태 변수를 추가 */\n      loading : true,\n    };\n  }\n\n  componentDidMount() {\n    /* componentDidMount에서 Todo 리스트를 가져오는 GET 요청이 성공적으로\n    리턴하는 경우 loading을 false로 고친다. 더 이상 로딩이 아니라는 뜻.*/\n    call(\"/todo\", \"GET\", null).then((response) =>\n      this.setState({ items: response.data, loading: false })\n    );\n  }\n\n  add = (item) => {\n    call(\"/todo\", \"POST\", item).then((response) =>\n      this.setState({ items: response.data })\n    );\n  };\n\n  delete = (item) => {\n    call(\"/todo\", \"DELETE\", item).then((response) =>\n      this.setState({ items: response.data })\n    );\n  };\n\n  update = (item) => {\n    call(\"/todo\", \"PUT\", item).then((response) =>\n      this.setState({ items: response.data })\n    );\n  };\n\n  render() {\n    var todoItems = this.state.items.length > 0 && (\n      <Paper style={{ margin: 16 }}>\n        <List>\n          {this.state.items.map((item, idx) => (\n            <Todo\n              item={item}\n              key={item.id}\n              delete={this.delete}\n              update={this.update}\n            />\n          ))}\n        </List>\n      </Paper>\n    );\n\n    // navigationBar 추가\n    var navigationBar = (\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Grid justify=\"space-between\" container>\n            <Grid item>\n              <Typography variant=\"h6\">오늘의 할일</Typography>\n            </Grid>\n            <Grid>\n              <Button color=\"inherit\" onClick={signout}>\n                로그아웃\n              </Button>\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n    )\n\n    /* 로딩 중이 아닐 때 렌더링 할 부분 */\n    var todoListPage = (\n      <div>\n        {navigationBar} {/* 네비게이션 바 렌더링 */}\n        <Container maxWidth=\"md\">\n          <AddTodo add={this.add} />\n          <div className=\"TodoList\">{todoItems}</div>\n        </Container>\n      </div>\n    )\n\n    /* 로딩 중일 때 렌더링할 부분 */\n    var loadingPage = <h1> 로딩 중..</h1>;\n    var content = loadingPage;\n    if (!this.state.loading) {\n      /*로딩중이 아니라면 todoListPage를 선택 */\n      content = todoListPage;\n    }\n\n    /* 선택한 content 렌더링 */\n    return <div className=\"App\">{content}</div>\n\n\n    // 3. props로 넘겨주기\n    return (\n      <div className=\"App\">\n        {navigationBar} {/* 네비게이션 바 렌더링 */}\n        <Container maxWidth=\"md\">\n          <AddTodo add={this.add} />\n          <div className=\"TodoList\">{todoItems}</div>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","D:\\demo-front\\src\\SignUp.js",[],[],"D:\\demo-front\\src\\Login.js",[],[],"D:\\demo-front\\src\\AddTodo.js",[],[],"D:\\demo-front\\src\\Todo.js",[],[],"D:\\demo-front\\src\\service\\ApiService.js",[],[],"D:\\demo-front\\src\\app-config.js",[],[],{"ruleId":"54","severity":1,"message":"55","line":102,"column":5,"nodeType":"56","messageId":"57","endLine":110,"endColumn":7},"no-unreachable","Unreachable code.","ReturnStatement","unreachableCode"]